load("/Volumes/Paradalab/Kacper/R/CSCs_CGD_t3_bulk_RNAseq_IGO14283/env_070623.RData")
filenames.tabs
head(B1)
head(B1.1)
plot(x=DE.results$log2FoldChange,y=-log(DE.results$padj), pch=20,
col='gray', main='CSCs differential expression', ylab='-log(adj.p.val)', xlab='log2(FC)')
points(x=DE.results[which(DE.results$log2FoldChange>2 & DE.results$padj<0.01),2],
y=-log(DE.results[which(DE.results$log2FoldChange>2 & DE.results$padj<0.01),6]),col='red4', pch=20)
points(x=DE.results[which(DE.results$log2FoldChange< -2 & DE.results$padj<0.01),2],
y=-log(DE.results[which(DE.results$log2FoldChange< -2 & DE.results$padj<0.01),6]),col='steelblue1', pch=20)
text(x= 19, y=40, 'UP=233', cex=0.7)
text(x=-17, y=40, 'DOWN=103', cex=0.7)
head(raw_data_comb)
sample_groups
row_sum_count<-apply(raw_data_comb, MARGIN = 1, sum)
to_remove0<-which(row_sum_count=0)
to_remove0<-which(row_sum_count==0)
head(to_remove0)
head(row_sum_count)
raw_data_comb2<-raw_data_comb[-to_remove0]
raw_data_comb2<-raw_data_comb[-to_remove0,]
head(raw_data_comb2)
head(raw_data_comb)
dim(raw_data_comb2)
dim(raw_data_comb)
DE2<-DESeqDataSetFromMatrix(countData = raw_data_comb2,
colData = sample_groups,
design = ~condition)
library(magrittr)
library(DESeq2)
DE2<-DESeqDataSetFromMatrix(countData = raw_data_comb2,
colData = sample_groups,
design = ~condition)
dim(DE2)
#[1] 55487     7
DE2 <-DE2[rowSums(counts(DE2)) >0,] #29433 detected genes (counts>0)
#calculate the size factor and add it to the data set
DE2<-estimateSizeFactors(DE2)
sizeFactors(DE2)
head(DE2)
DE$condition
DE2 <-DESeq(DE2)
DE.results2 <-results(DE2, independentFiltering = TRUE , alpha = 0.05)
summary(DE.results2)
DE.results2<-as.data.frame(DE.results2)
DE.results2<-DE.results2[order(DE.results2[,6]),]
head(DE.results2)
plot(x=DE.results2$log2FoldChange,y=-log(DE.results2$padj), pch=20,
col='gray', main='CSCs differential expression', ylab='-log(adj.p.val)', xlab='log2(FC)')
points(x=DE.results2[which(DE.results2$log2FoldChange>2 & DE.results2$padj<0.01),2],
y=-log(DE.results2[which(DE.results2$log2FoldChange>2 & DE.results2$padj<0.01),6]),col='red4', pch=20)
points(x=DE.results2[which(DE.results2$log2FoldChange< -2 & DE.results2$padj<0.01),2],
y=-log(DE.results2[which(DE.results2$log2FoldChange< -2 & DE.results2$padj<0.01),6]),col='steelblue1', pch=20)
head(DE2)
DE2$group
DE2$condition
DE$condition
colData(DE2)$condition
DE2$condition <-relevel(DE2$condition,'tumor')
DE2$condition
DE2 <-DESeq(DE2)
DE.results2 <-results(DE2, independentFiltering = TRUE , alpha = 0.05)
summary(DE.results2)
DE.results2<-as.data.frame(DE.results2)
DE.results2<-DE.results2[order(DE.results2[,6]),]
head(DE.results2)
plot(x=DE.results2$log2FoldChange,y=-log(DE.results2$padj), pch=20,
col='gray', main='CSCs differential expression', ylab='-log(adj.p.val)', xlab='log2(FC)')
points(x=DE.results2[which(DE.results2$log2FoldChange>2 & DE.results2$padj<0.01),2],
y=-log(DE.results2[which(DE.results2$log2FoldChange>2 & DE.results2$padj<0.01),6]),col='red4', pch=20)
points(x=DE.results2[which(DE.results2$log2FoldChange< -2 & DE.results2$padj<0.01),2],
y=-log(DE.results2[which(DE.results2$log2FoldChange< -2 & DE.results2$padj<0.01),6]),col='steelblue1', pch=20)
Up_genes<-DE.results2[which(DE.results2$log2FoldChange>2.5 & DE.results2$padj<0.01),]
Up_genes
Up_genes<-DE.results2[which(DE.results2$log2FoldChange>5 & DE.results2$padj<0.01),]
Up_genes
Up_genes<-DE.results2[which(DE.results2$log2FoldChange>7 & DE.results2$padj<0.01),]
Up_genes
Up_genes<-DE.results2[order(DE.results2[,2]),]
Up_genes
Up_genes<-DE.results2[which(DE.results2$log2FoldChange>7 & DE.results2$padj<0.01),]
Up_genes
Up_genes<-Up_genes[order(Up_genes[,2]),]
Up_genes
plot(x=DE.results2$log2FoldChange,y=-log(DE.results2$padj), pch=20,
col='gray', main='CSCs differential expression', ylab='-log(adj.p.val)', xlab='log2(FC)')
points(x=DE.results2[which(DE.results2$log2FoldChange>2 & DE.results2$padj<0.01),2],
y=-log(DE.results2[which(DE.results2$log2FoldChange>2 & DE.results2$padj<0.01),6]),col='red4', pch=20)
points(x=DE.results2[which(DE.results2$log2FoldChange< -2 & DE.results2$padj<0.01),2],
y=-log(DE.results2[which(DE.results2$log2FoldChange< -2 & DE.results2$padj<0.01),6]),col='steelblue1', pch=20)
plot(x=DGE.results.ordered$log2FoldChange,
y=-log(DGE.results.ordered$padj), xlab='log2(FC)', ylab='-log(adj.pval)',
pch=20, col='gray', main='DGE CSC vs tumor cells \nCGDt3')
install.packages('inferCNV')
BiocManager::install('inferCNV')
library(infercnv)
BiocManager::install('infercnv')
library(infercnv)
library(infercnv)
library(infercnv)
# create the infercnv object
infercnv_obj = CreateInfercnvObject(raw_counts_matrix="singleCell.counts.matrix",
annotations_file="cellAnnotations.txt",
delim="\t",
gene_order_file="gene_ordering_file.txt",
ref_group_names=c("normal"))
# create the infercnv object
infercnv_obj = CreateInfercnvObject(raw_counts_matrix=system.file("extdata", "oligodendroglioma_expression_downsampled.counts.matrix.gz", package = "infercnv"),
annotations_file=system.file("extdata", "oligodendroglioma_annotations_downsampled.txt", package = "infercnv"),
delim="\t",
gene_order_file=system.file("extdata", "gencode_downsampled.EXAMPLE_ONLY_DONT_REUSE.txt", package = "infercnv"),
ref_group_names=c("Microglia/Macrophage","Oligodendrocytes (non-malignant)"))
infercnv_obj = infercnv::run(infercnv_obj,
cutoff=1, # cutoff=1 works well for Smart-seq2, and cutoff=0.1 works well for 10x Genomics
out_dir=tempfile(),
cluster_by_groups=TRUE,
denoise=TRUE,
HMM=TRUE)
plot(infercnv_obj)
getwd()
setwd('Documents/WWW-Resume_page/')
install.packages("quarto")
library(quarto)
website
quarto create-project my-website --type website
quarto create-project my-website
library(rmarkdown)
quarto create-project my-website
